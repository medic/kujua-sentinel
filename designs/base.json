{
    "lib": {
        "index": "exports.views = require('./views');\n",
        "views": "exports.patient_ids_by_form_clinic_and_reported_date = {\n    map: function(doc) {\n        if (!doc.patient_id\n            || !doc.reported_date\n            || !doc.contact\n            || !doc.contact.parent\n            || !doc.form) return;\n        var cl_id = doc.contact.parent._id;\n        emit([doc.form, doc.patient_id, cl_id, doc.reported_date], null);\n    }\n};\n\nexports.serial_numbers_by_form_clinic_and_reported_date = {\n    map: function(doc) {\n        if (!doc.serial_number\n            || !doc.reported_date\n            || !doc.contact\n            || !doc.contact.parent\n            || !doc.form) return;\n        var cl_id = doc.contact.parent._id;\n        emit([doc.form, doc.serial_number, cl_id, doc.reported_date], null);\n    }\n};\n\nexports.due_tasks = {\n    map: function(doc) {\n        var tasks = doc.scheduled_tasks || [];\n\n        tasks.forEach(function(task, index) {\n            if (task.due && task.state === 'scheduled') {\n                emit(task.due, task);\n            }\n        });\n    }\n};\n\n/*\n * Get clinic based on phone number\n */\nexports.clinic_by_phone = {\n    map: function(doc) {\n        if (doc.type === 'clinic' && doc.contact && doc.contact.phone) {\n            emit([doc.contact.phone], null);\n        }\n    }\n};\n\n/*\n * Get clinic based on reference id\n */\nexports.clinic_by_refid = {\n    map: function (doc) {\n        if (doc.type === 'clinic' && doc.contact && doc.contact.rc_code) {\n            // need String because rewriter wraps everything in quotes\n            emit([String(doc.contact.rc_code)], null);\n        }\n    }\n};\n\nexports.person_by_phone = {\n    map: function (doc) {\n        if (doc.type === 'person') {\n            emit([doc.phone], doc);\n        }\n    }\n};\n\nexports.ohw_registered_patients = {\n    map: function(doc) {\n        if (doc.form === 'ORPT' && doc.patient_id) {\n            emit(doc.patient_id, null);\n        }\n    }\n};\n\nexports.registered_patients = {\n    map: function(doc) {\n        if (doc.form &&\n            (!doc.errors || doc.errors.length === 0) &&\n            doc.patient_id &&\n            doc.transitions &&\n            doc.transitions.registration &&\n            doc.transitions.registration.ok ) {\n                emit(String(doc.patient_id), null);\n        }\n    }\n}\n\nexports.last_valid_seq = {\n    map: function(doc) {\n        var transitions = doc.transitions || {};\n            keys = Object.keys(transitions);\n\n        keys.forEach(function(key) {\n            emit(key, transitions[key]);\n        });\n    }, reduce: function(keys, values) {\n        return values.reduce(function(memo, result) {\n            if (memo.ok) {\n                if (!result.ok || result.seq > memo.seq) {\n                   return result;\n                } else {\n                   return memo;\n                }\n            } else if (result.seq < memo.seq) {\n                return result;\n            } else {\n                return memo;\n            }\n        }, { ok: true, seq: 0 });\n    }\n};\n\nexports.data_records_by_form_year_week_clinic_id_and_reported_date = {\n    map: function (doc) {\n        if (doc.type === 'data_record'\n                && doc.contact\n                && doc.contact.parent\n                && doc.year\n                && (doc.week || doc.week_number)\n                && doc.form\n                && doc.reported_date) {\n            emit([\n                doc.form,\n                doc.year,\n                doc.week || doc.week_number,\n                doc.contact.parent._id,\n                doc.reported_date\n            ], null);\n        }\n    }\n};\n\nexports.data_records_by_form_year_month_clinic_id_and_reported_date = {\n    map: function (doc) {\n        if (doc.type === 'data_record'\n                && doc.contact\n                && doc.contact.parent\n                && doc.year\n                && doc.month\n                && doc.form\n                && doc.reported_date) {\n            emit([\n                doc.form,\n                doc.year,\n                doc.month,\n                doc.contact.parent._id,\n                doc.reported_date\n            ], null);\n        }\n    }\n};\n\nexports.data_records_by_form_and_clinic = {\n    map: function(doc) {\n        if (doc.type === 'data_record' \n            && doc.form \n            && doc.contact\n            && doc.contact.parent) {\n            emit([\n                doc.form,\n                doc.contact.parent._id\n            ], null);\n        }\n    }\n};\n\nexports.sent_reminders = {\n    map: function(doc) {\n        if (Array.isArray(doc.tasks)) {\n            doc.tasks.forEach(function(task) {\n                if (task.code && task.ts) {\n                    emit([task.code, task.ts], null);\n                }\n            });\n        }\n    }\n}\n\n"
    },
    "views": {
        "patient_ids_by_form_clinic_and_reported_date": {
            "map": "function (doc) {\n        if (!doc.patient_id\n            || !doc.reported_date\n            || !doc.contact\n            || !doc.contact.parent\n            || !doc.form) return;\n        var cl_id = doc.contact.parent._id;\n        emit([doc.form, doc.patient_id, cl_id, doc.reported_date], null);\n    }"
        },
        "serial_numbers_by_form_clinic_and_reported_date": {
            "map": "function (doc) {\n        if (!doc.serial_number\n            || !doc.reported_date\n            || !doc.contact\n            || !doc.contact.parent\n            || !doc.form) return;\n        var cl_id = doc.contact.parent._id;\n        emit([doc.form, doc.serial_number, cl_id, doc.reported_date], null);\n    }"
        },
        "due_tasks": {
            "map": "function (doc) {\n        var tasks = doc.scheduled_tasks || [];\n\n        tasks.forEach(function(task, index) {\n            if (task.due && task.state === 'scheduled') {\n                emit(task.due, task);\n            }\n        });\n    }"
        },
        "clinic_by_phone": {
            "map": "function (doc) {\n        if (doc.type === 'clinic' && doc.contact && doc.contact.phone) {\n            emit([doc.contact.phone], null);\n        }\n    }"
        },
        "clinic_by_refid": {
            "map": "function (doc) {\n        if (doc.type === 'clinic' && doc.contact && doc.contact.rc_code) {\n            // need String because rewriter wraps everything in quotes\n            emit([String(doc.contact.rc_code)], null);\n        }\n    }"
        },
        "person_by_phone": {
            "map": "function (doc) {\n        if (doc.type === 'person') {\n          emit([doc.phone], doc);\n          }\n        }"
        },
        "ohw_registered_patients": {
            "map": "function (doc) {\n        if (doc.form === 'ORPT' && doc.patient_id) {\n            emit(doc.patient_id, null);\n        }\n    }"
        },
        "registered_patients": {
            "map": "function (doc) {\n        if (doc.form &&\n            (!doc.errors || doc.errors.length === 0) &&\n            doc.patient_id &&\n            doc.transitions &&\n            doc.transitions.registration &&\n            doc.transitions.registration.ok ) {\n                emit(String(doc.patient_id), null);\n        }\n    }"
        },
        "last_valid_seq": {
            "map": "function (doc) {\n        var transitions = doc.transitions || {};\n            keys = Object.keys(transitions);\n\n        keys.forEach(function(key) {\n            emit(key, transitions[key]);\n        });\n    }",
            "reduce": "function (keys, values) {\n        return values.reduce(function(memo, result) {\n            if (memo.ok) {\n                if (!result.ok || result.seq > memo.seq) {\n                   return result;\n                } else {\n                   return memo;\n                }\n            } else if (result.seq < memo.seq) {\n                return result;\n            } else {\n                return memo;\n            }\n        }, { ok: true, seq: 0 });\n    }"
        },
        "data_records_by_form_year_week_clinic_id_and_reported_date": {
            "map": "function (doc) {\n        if (doc.type === 'data_record'\n                && doc.contact\n                && doc.contact.parent\n                && doc.year\n                && (doc.week || doc.week_number)\n                && doc.form\n                && doc.reported_date) {\n            emit([\n                doc.form,\n                doc.year,\n                doc.week || doc.week_number,\n                doc.contact.parent._id,\n                doc.reported_date\n            ], null);\n        }\n    }"
        },
        "data_records_by_form_year_month_clinic_id_and_reported_date": {
            "map": "function (doc) {\n        if (doc.type === 'data_record'\n                && doc.contact\n                && doc.contact.parent\n                && doc.year\n                && doc.month\n                && doc.form\n                && doc.reported_date) {\n            emit([\n                doc.form,\n                doc.year,\n                doc.month,\n                doc.contact.parent._id,\n                doc.reported_date\n            ], null);\n        }\n    }"
        },
        "data_records_by_form_and_clinic": {
            "map": "function (doc) {\n        if (doc.type === 'data_record' \n            && doc.form \n            && doc.contact\n            && doc.contact.parent) {\n            emit([\n                doc.form,\n                doc.contact.parent._id\n            ], null);\n        }\n    }"
        },
        "sent_reminders": {
            "map": "function (doc) {\n        if (Array.isArray(doc.tasks)) {\n            doc.tasks.forEach(function(task) {\n                if (task.code && task.ts) {\n                    emit([task.code, task.ts], null);\n                }\n            });\n        }\n    }"
        }
    },
    "rewrites": [],
    "_attachments": {
        "modules.js": {
            "content_type": "application/json; charset=utf-8",
            "data": "LypnbG9iYWwgd2luZG93OiBmYWxzZSwgJDogZmFsc2UsIHBhZ2VUcmFja2VyOiBmYWxzZSwga2Fuc286IHRydWUgKi8KCi8qKgogKiBDb2RlIHJlcXVpcmVkIHRvIGJvb3RzdHJhcCB0aGUgYnJvd3NlciBDb21tb25KUyBlbnZpcm9ubWVudC4KICovCgooZnVuY3Rpb24gKGV4cG9ydHMpIHsKCiAgICBleHBvcnRzLm1vZHVsZUNhY2hlID0ge307CgogICAgZXhwb3J0cy5ub3JtYWxpemVQYXRoID0gZnVuY3Rpb24gKHApIHsKICAgICAgICB2YXIgcGF0aCA9IFtdOwogICAgICAgIHZhciBwYXJ0cyA9IHAuc3BsaXQoJy8nKTsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHBhcnRzLmxlbmd0aDsgaSArPSAxKSB7CiAgICAgICAgICAgIGlmIChwYXJ0c1tpXSA9PT0gJy4uJykgewogICAgICAgICAgICAgICAgcGF0aC5wb3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIGlmIChwYXJ0c1tpXSAhPT0gJy4nKSB7CiAgICAgICAgICAgICAgICBwYXRoLnB1c2gocGFydHNbaV0pOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHJldHVybiBwYXRoLmpvaW4oJy8nKTsKICAgIH07CgogICAgZXhwb3J0cy5kaXJuYW1lID0gZnVuY3Rpb24gKHApIHsKICAgICAgICBpZiAocCA9PT0gJy8nKSB7CiAgICAgICAgICAgIHJldHVybiBwOwogICAgICAgIH0KICAgICAgICB2YXIgcGFydHMgPSBwLnNwbGl0KCcvJyk7CiAgICAgICAgcGFydHMucG9wKCk7CiAgICAgICAgaWYgKHBhcnRzLmxlbmd0aCA9PT0gMSAmJiBwYXJ0c1swXSA9PT0gJycpIHsKICAgICAgICAgICAgcmV0dXJuICcvJzsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHBhcnRzLmpvaW4oJy8nKTsKICAgIH07CgogICAgZXhwb3J0cy5jcmVhdGVSZXF1aXJlID0gZnVuY3Rpb24gKGN1cnJlbnQpIHsKICAgICAgICByZXR1cm4gZnVuY3Rpb24gKHRhcmdldCkgewogICAgICAgICAgICB2YXIgcGF0aDsKICAgICAgICAgICAgaWYgKHRhcmdldC5jaGFyQXQoMCkgPT09ICcuJykgewogICAgICAgICAgICAgICAgdmFyIGRpciA9IGV4cG9ydHMuZGlybmFtZShjdXJyZW50KTsKICAgICAgICAgICAgICAgIHBhdGggPSBleHBvcnRzLm5vcm1hbGl6ZVBhdGgoZGlyICsgJy8nICsgdGFyZ2V0KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlbHNlIHsKICAgICAgICAgICAgICAgIHBhdGggPSBleHBvcnRzLm5vcm1hbGl6ZVBhdGgodGFyZ2V0KTsKICAgICAgICAgICAgfQogICAgICAgICAgICB2YXIgbSA9IGthbnNvLm1vZHVsZUNhY2hlW3BhdGhdOwogICAgICAgICAgICBpZiAoIW0pIHsKICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gc3VjaCBtb2R1bGU6ICcgKyBwYXRoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoIW0ubG9hZGVkKSB7CiAgICAgICAgICAgICAgICBtLmV4cG9ydHMgPSB7fTsKICAgICAgICAgICAgICAgIG0uaWQgPSBwYXRoOwogICAgICAgICAgICAgICAgLy8gVE9ETzogcHJvcGVydHkgbm90IHByb3ZpZGVkIGJ5IGNvdWNoZGIsIGJ1dCBpcyBieSBub2RlOgogICAgICAgICAgICAgICAgLy9tLnJlcXVpcmUgPSBleHBvcnRzLmNyZWF0ZVJlcXVpcmUocGF0aCk7CiAgICAgICAgICAgICAgICAvLyBUT0RPOiBwcm9wZXJ0eSBub3QgcHJvdmlkZWQgYnkgY291Y2hkYiwgYnV0IGlzIGJ5IG5vZGU6CiAgICAgICAgICAgICAgICAvL20uZmlsZW5hbWUgPSAnJzsKICAgICAgICAgICAgICAgIC8vIFRPRE86IG1vZHVsZSBwcm9wZXJ0aWVzIHByb3ZpZGVkIGJ5IGNvdWNoZGIsIGJ1dCBub3QgYnkga2Fuc28KICAgICAgICAgICAgICAgIC8vICogY3VycmVudAogICAgICAgICAgICAgICAgLy8gKiBwYXJlbnQKICAgICAgICAgICAgICAgIC8vIHNldCB0aGlzIHRvIHRydWUgKmJlZm9yZSogY2FsbGluZyBtLmxvYWQgc28gY2lyY3VsYXIKICAgICAgICAgICAgICAgIC8vIHJlcXVpcmVzIGRvbid0IGJsb3cgdGhlIGNhbGwgc3RhY2sKICAgICAgICAgICAgICAgIG0ubG9hZGVkID0gdHJ1ZTsKICAgICAgICAgICAgICAgIC8vbS5sb2FkKG0sIG0uZXhwb3J0cywgbS5yZXF1aXJlKTsKICAgICAgICAgICAgICAgIG0ubG9hZChtLCBtLmV4cG9ydHMsIGV4cG9ydHMuY3JlYXRlUmVxdWlyZShwYXRoKSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIG0uZXhwb3J0czsKICAgICAgICB9OwogICAgfTsKCiAgICBpZiAodHlwZW9mIHJlcXVpcmUgPT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgLy8gbWFrZSByZXF1aXJlIGF2YWlsYWJsZSBnbG9iYWxseSwgdW5sZXNzIGFscmVhZHkgaW4gYSBjb21tb25qcwogICAgICAgIC8vIGVudmlyb25tZW50CiAgICAgICAgdGhpcy5yZXF1aXJlID0gZXhwb3J0cy5jcmVhdGVSZXF1aXJlKCcnKTsKICAgIH0KCn0oKHR5cGVvZiBleHBvcnRzID09PSAndW5kZWZpbmVkJykgPyB0aGlzLmthbnNvID0ge306IG1vZHVsZS5leHBvcnRzKSk7CgoKLyoqCiAqIENvbW1vbkpTIG1vZHVsZXMgYXJlIHdyYXBwZWQgYW5kIGFwcGVuZGVkIHRvIHRoaXMgZmlsZS4KICovCi8qKioqKioqKioqIGxpYi9pbmRleCAqKioqKioqKioqLwoKa2Fuc28ubW9kdWxlQ2FjaGVbImxpYi9pbmRleCJdID0ge2xvYWQ6IChmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzLCByZXF1aXJlKSB7CgpleHBvcnRzLnZpZXdzID0gcmVxdWlyZSgnLi92aWV3cycpOwoKCn0pfTsKCi8qKioqKioqKioqIGxpYi92aWV3cyAqKioqKioqKioqLwoKa2Fuc28ubW9kdWxlQ2FjaGVbImxpYi92aWV3cyJdID0ge2xvYWQ6IChmdW5jdGlvbiAobW9kdWxlLCBleHBvcnRzLCByZXF1aXJlKSB7CgpleHBvcnRzLnBhdGllbnRfaWRzX2J5X2Zvcm1fY2xpbmljX2FuZF9yZXBvcnRlZF9kYXRlID0gewogICAgbWFwOiBmdW5jdGlvbihkb2MpIHsKICAgICAgICBpZiAoIWRvYy5wYXRpZW50X2lkCiAgICAgICAgICAgIHx8ICFkb2MucmVwb3J0ZWRfZGF0ZQogICAgICAgICAgICB8fCAhZG9jLnJlbGF0ZWRfZW50aXRpZXMKICAgICAgICAgICAgfHwgIWRvYy5yZWxhdGVkX2VudGl0aWVzLmNsaW5pYwogICAgICAgICAgICB8fCAhZG9jLmZvcm0pIHJldHVybjsKICAgICAgICB2YXIgY2xfaWQgPSBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWMuX2lkOwogICAgICAgIGVtaXQoW2RvYy5mb3JtLCBkb2MucGF0aWVudF9pZCwgY2xfaWQsIGRvYy5yZXBvcnRlZF9kYXRlXSwgbnVsbCk7CiAgICB9Cn07CgpleHBvcnRzLnNlcmlhbF9udW1iZXJzX2J5X2Zvcm1fY2xpbmljX2FuZF9yZXBvcnRlZF9kYXRlID0gewogICAgbWFwOiBmdW5jdGlvbihkb2MpIHsKICAgICAgICBpZiAoIWRvYy5zZXJpYWxfbnVtYmVyCiAgICAgICAgICAgIHx8ICFkb2MucmVwb3J0ZWRfZGF0ZQogICAgICAgICAgICB8fCAhZG9jLnJlbGF0ZWRfZW50aXRpZXMKICAgICAgICAgICAgfHwgIWRvYy5yZWxhdGVkX2VudGl0aWVzLmNsaW5pYwogICAgICAgICAgICB8fCAhZG9jLmZvcm0pIHJldHVybjsKICAgICAgICB2YXIgY2xfaWQgPSBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWMuX2lkOwogICAgICAgIGVtaXQoW2RvYy5mb3JtLCBkb2Muc2VyaWFsX251bWJlciwgY2xfaWQsIGRvYy5yZXBvcnRlZF9kYXRlXSwgbnVsbCk7CiAgICB9Cn07CgpleHBvcnRzLmR1ZV90YXNrcyA9IHsKICAgIG1hcDogZnVuY3Rpb24oZG9jKSB7CiAgICAgICAgdmFyIHRhc2tzID0gZG9jLnNjaGVkdWxlZF90YXNrcyB8fCBbXTsKCiAgICAgICAgdGFza3MuZm9yRWFjaChmdW5jdGlvbih0YXNrLCBpbmRleCkgewogICAgICAgICAgICBpZiAodGFzay5kdWUgJiYgdGFzay5zdGF0ZSA9PT0gJ3NjaGVkdWxlZCcpIHsKICAgICAgICAgICAgICAgIGVtaXQodGFzay5kdWUsIHRhc2spOwogICAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9Cn07CgovKgogKiBHZXQgY2xpbmljIGJhc2VkIG9uIHBob25lIG51bWJlcgogKi8KZXhwb3J0cy5jbGluaWNfYnlfcGhvbmUgPSB7CiAgICBtYXA6IGZ1bmN0aW9uKGRvYykgewogICAgICAgIGlmIChkb2MudHlwZSA9PT0gJ2NsaW5pYycgJiYgZG9jLmNvbnRhY3QgJiYgZG9jLmNvbnRhY3QucGhvbmUpIHsKICAgICAgICAgICAgZW1pdChbZG9jLmNvbnRhY3QucGhvbmVdLCBudWxsKTsKICAgICAgICB9CiAgICB9Cn07CgovKgogKiBHZXQgY2xpbmljIGJhc2VkIG9uIHJlZmVyZW5jZSBpZAogKi8KZXhwb3J0cy5jbGluaWNfYnlfcmVmaWQgPSB7CiAgICBtYXA6IGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICBpZiAoZG9jLnR5cGUgPT09ICdjbGluaWMnICYmIGRvYy5jb250YWN0ICYmIGRvYy5jb250YWN0LnJjX2NvZGUpIHsKICAgICAgICAgICAgLy8gbmVlZCBTdHJpbmcgYmVjYXVzZSByZXdyaXRlciB3cmFwcyBldmVyeXRoaW5nIGluIHF1b3RlcwogICAgICAgICAgICBlbWl0KFtTdHJpbmcoZG9jLmNvbnRhY3QucmNfY29kZSldLCBudWxsKTsKICAgICAgICB9CiAgICB9Cn07CgpleHBvcnRzLm9od19yZWdpc3RlcmVkX3BhdGllbnRzID0gewogICAgbWFwOiBmdW5jdGlvbihkb2MpIHsKICAgICAgICBpZiAoZG9jLmZvcm0gPT09ICdPUlBUJyAmJiBkb2MucGF0aWVudF9pZCkgewogICAgICAgICAgICBlbWl0KGRvYy5wYXRpZW50X2lkLCBudWxsKTsKICAgICAgICB9CiAgICB9Cn07CgpleHBvcnRzLnJlZ2lzdGVyZWRfcGF0aWVudHMgPSB7CiAgICBtYXA6IGZ1bmN0aW9uKGRvYykgewogICAgICAgIGlmIChkb2MuZm9ybSAmJgogICAgICAgICAgICAoIWRvYy5lcnJvcnMgfHwgZG9jLmVycm9ycy5sZW5ndGggPT09IDApICYmCiAgICAgICAgICAgIGRvYy5wYXRpZW50X2lkICYmCiAgICAgICAgICAgIGRvYy50cmFuc2l0aW9ucyAmJgogICAgICAgICAgICBkb2MudHJhbnNpdGlvbnMucmVnaXN0cmF0aW9uICYmCiAgICAgICAgICAgIGRvYy50cmFuc2l0aW9ucy5yZWdpc3RyYXRpb24ub2sgKSB7CiAgICAgICAgICAgICAgICBlbWl0KFN0cmluZyhkb2MucGF0aWVudF9pZCksIG51bGwpOwogICAgICAgIH0KICAgIH0KfQoKZXhwb3J0cy5sYXN0X3ZhbGlkX3NlcSA9IHsKICAgIG1hcDogZnVuY3Rpb24oZG9jKSB7CiAgICAgICAgdmFyIHRyYW5zaXRpb25zID0gZG9jLnRyYW5zaXRpb25zIHx8IHt9OwogICAgICAgICAgICBrZXlzID0gT2JqZWN0LmtleXModHJhbnNpdGlvbnMpOwoKICAgICAgICBrZXlzLmZvckVhY2goZnVuY3Rpb24oa2V5KSB7CiAgICAgICAgICAgIGVtaXQoa2V5LCB0cmFuc2l0aW9uc1trZXldKTsKICAgICAgICB9KTsKICAgIH0sIHJlZHVjZTogZnVuY3Rpb24oa2V5cywgdmFsdWVzKSB7CiAgICAgICAgcmV0dXJuIHZhbHVlcy5yZWR1Y2UoZnVuY3Rpb24obWVtbywgcmVzdWx0KSB7CiAgICAgICAgICAgIGlmIChtZW1vLm9rKSB7CiAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdC5vayB8fCByZXN1bHQuc2VxID4gbWVtby5zZXEpIHsKICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgcmV0dXJuIG1lbW87CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzdWx0LnNlcSA8IG1lbW8uc2VxKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0OwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIG1lbW87CiAgICAgICAgICAgIH0KICAgICAgICB9LCB7IG9rOiB0cnVlLCBzZXE6IDAgfSk7CiAgICB9Cn07CgpleHBvcnRzLmRhdGFfcmVjb3Jkc19ieV9mb3JtX3llYXJfd2Vla19jbGluaWNfaWRfYW5kX3JlcG9ydGVkX2RhdGUgPSB7CiAgICBtYXA6IGZ1bmN0aW9uIChkb2MpIHsKICAgICAgICBpZiAoZG9jLnR5cGUgPT09ICdkYXRhX3JlY29yZCcKICAgICAgICAgICAgICAgICYmIGRvYy5yZWxhdGVkX2VudGl0aWVzCiAgICAgICAgICAgICAgICAmJiBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWMKICAgICAgICAgICAgICAgICYmIGRvYy55ZWFyCiAgICAgICAgICAgICAgICAmJiAoZG9jLndlZWsgfHwgZG9jLndlZWtfbnVtYmVyKQogICAgICAgICAgICAgICAgJiYgZG9jLmZvcm0KICAgICAgICAgICAgICAgICYmIGRvYy5yZXBvcnRlZF9kYXRlKSB7CiAgICAgICAgICAgIGVtaXQoWwogICAgICAgICAgICAgICAgZG9jLmZvcm0sCiAgICAgICAgICAgICAgICBkb2MueWVhciwKICAgICAgICAgICAgICAgIGRvYy53ZWVrIHx8IGRvYy53ZWVrX251bWJlciwKICAgICAgICAgICAgICAgIGRvYy5yZWxhdGVkX2VudGl0aWVzLmNsaW5pYy5faWQsCiAgICAgICAgICAgICAgICBkb2MucmVwb3J0ZWRfZGF0ZQogICAgICAgICAgICBdLCBudWxsKTsKICAgICAgICB9CiAgICB9Cn07CgpleHBvcnRzLmRhdGFfcmVjb3Jkc19ieV9mb3JtX3llYXJfbW9udGhfY2xpbmljX2lkX2FuZF9yZXBvcnRlZF9kYXRlID0gewogICAgbWFwOiBmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgaWYgKGRvYy50eXBlID09PSAnZGF0YV9yZWNvcmQnCiAgICAgICAgICAgICAgICAmJiBkb2MucmVsYXRlZF9lbnRpdGllcwogICAgICAgICAgICAgICAgJiYgZG9jLnJlbGF0ZWRfZW50aXRpZXMuY2xpbmljCiAgICAgICAgICAgICAgICAmJiBkb2MueWVhcgogICAgICAgICAgICAgICAgJiYgZG9jLm1vbnRoCiAgICAgICAgICAgICAgICAmJiBkb2MuZm9ybQogICAgICAgICAgICAgICAgJiYgZG9jLnJlcG9ydGVkX2RhdGUpIHsKICAgICAgICAgICAgZW1pdChbCiAgICAgICAgICAgICAgICBkb2MuZm9ybSwKICAgICAgICAgICAgICAgIGRvYy55ZWFyLAogICAgICAgICAgICAgICAgZG9jLm1vbnRoLAogICAgICAgICAgICAgICAgZG9jLnJlbGF0ZWRfZW50aXRpZXMuY2xpbmljLl9pZCwKICAgICAgICAgICAgICAgIGRvYy5yZXBvcnRlZF9kYXRlCiAgICAgICAgICAgIF0sIG51bGwpOwogICAgICAgIH0KICAgIH0KfTsKCmV4cG9ydHMuZGF0YV9yZWNvcmRzX2J5X2Zvcm1fYW5kX2NsaW5pYyA9IHsKICAgIG1hcDogZnVuY3Rpb24oZG9jKSB7CiAgICAgICAgaWYgKGRvYy50eXBlID09PSAnZGF0YV9yZWNvcmQnIAogICAgICAgICAgICAmJiBkb2MuZm9ybSAKICAgICAgICAgICAgJiYgZG9jLnJlbGF0ZWRfZW50aXRpZXMKICAgICAgICAgICAgJiYgZG9jLnJlbGF0ZWRfZW50aXRpZXMuY2xpbmljKSB7CiAgICAgICAgICAgIGVtaXQoWwogICAgICAgICAgICAgICAgZG9jLmZvcm0sCiAgICAgICAgICAgICAgICBkb2MucmVsYXRlZF9lbnRpdGllcy5jbGluaWMuX2lkCiAgICAgICAgICAgIF0sIG51bGwpOwogICAgICAgIH0KICAgIH0KfTsKCmV4cG9ydHMuc2VudF9yZW1pbmRlcnMgPSB7CiAgICBtYXA6IGZ1bmN0aW9uKGRvYykgewogICAgICAgIGlmIChBcnJheS5pc0FycmF5KGRvYy50YXNrcykpIHsKICAgICAgICAgICAgZG9jLnRhc2tzLmZvckVhY2goZnVuY3Rpb24odGFzaykgewogICAgICAgICAgICAgICAgaWYgKHRhc2suY29kZSAmJiB0YXNrLnRzKSB7CiAgICAgICAgICAgICAgICAgICAgZW1pdChbdGFzay5jb2RlLCB0YXNrLnRzXSwgbnVsbCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0KICAgIH0KfQoKCgp9KX07Cgo="
        }
    },
    "kanso": {
        "config": {
            "name": "kujua-sentinel",
            "version": "0.0.1",
            "description": "Kujua Sentinel",
            "modules": [
                "lib"
            ],
            "load": "lib/index",
            "dependencies": {
                "modules": null,
                "properties": null
            },
            "minify": false
        },
        "build_time": "2014-12-18T03:54:28Z",
        "kanso_version": "0.3.2"
    }
}
